<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Japanese on ck-blog</title>
    <link>/tags/japanese/</link>
    <description>Recent content in Japanese on ck-blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 28 Dec 2019 13:13:00 +0100</lastBuildDate>
    
	<atom:link href="/tags/japanese/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Structured Immersion</title>
      <link>/posts/structured-immersion/</link>
      <pubDate>Sat, 28 Dec 2019 13:13:00 +0100</pubDate>
      
      <guid>/posts/structured-immersion/</guid>
      <description>When it comes to language learning, one approach that I really subscribe to is immersion. This means trying to absorb as much of the language as possible, as often as possible. It&amp;rsquo;s often said that &amp;ldquo;speaking with locals&amp;rdquo; is a good way to accelerate the learning process, and there&amp;rsquo;s a lot of truth with that statement.
Comprehensible Input One aspect of immersion that&amp;rsquo;s often overlooked is the idea of comprehensible input.</description>
    </item>
    
    <item>
      <title>Sentence Banking</title>
      <link>/posts/sentence-banking/</link>
      <pubDate>Sun, 07 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/sentence-banking/</guid>
      <description>This is a post about ginkou, a tool I made recently. This tool uses Rust, SQLite, as well as mecab to archive sentences, and then to retrieve them based on the words they contain.
Why would I need this? Unless you&amp;rsquo;re learning Japanese, you probably won&amp;rsquo;t.
With the way I&amp;rsquo;m approaching it, I try and combine words and grammar into the same flashcard system. This means making new flashcarsd with sentences containing small bits of information I&amp;rsquo;m trying to learn.</description>
    </item>
    
  </channel>
</rss>